RX Protocols
------------

PPM / CPPM
----------

PPM and CPPM are the same thing, I think.

These are pulse-width protocols - they use the same scheme of pulse lengths as standard ppm:

1ms - minimum / full left
2ms - maximum / full rights
1.5ms - centre

Several pulses are sent with a short (100us?) space between, then a longer
"sync pulse" which is at least 3ms long. Perhaps as long as 10ms.

The whole thing will repeat with a period of approx 20ms.

Channels are sent in series

FUTABA S-BUS
------------

This is the protocol used by Futaba receivers, servos, and some other things. It's a serial
1-wire protocol and uses a bit rate of 100kbaud.

Some details are here:
https://os.mbed.com/users/Digixx/notebook/futaba-s-bus-controlled-by-mbed/

TURNIGY / HOBBYKING / FLYSKY - I-BUS
------------

This is a different serial protocol, it uses a bit rate of 115,200 baud.


In principle we might be able to auto-detect s-bus or i-bus.

The pulses will be much shorter on the serial protocols.

Unfortunately s-bus and i-bus do not use the same bit rate, and it's probably not close
enough to work. We could detect known patterns which might appear if the wrong
bit rate is selected and switch protocols?

SERIAL PROTOCOLS
--------

The serial protocols send a number of bytes in a packet, which contains the
tx signals for all channels (up to 16 maybe) and some other metadata.

This packet is then repeated at regular intervals, and can be quite fast
because of the relatively high bit-rate.

FAILSAFE
----
In any case, we need to check for a gap in packets, or packets with the
"failsafe" bit set. If we receive no new data for some time (e.g. 200ms) then
the transmitter signal is probably gone. In this case, we should turn all
the motors off and wait for a new signal.

CHANNEL NUMBERS / ASSIGNMENT
----------

I don't know if there is a standard. It's not clear.

index=0 (channel 1) = Steering
index=1 (channel 2) = (elevator) - use for weapon
index=2 (channel 3) = throttle
index=3 - another thing
index=4 - another thing - mapped to switches by default
index=5 (channel 6) - config? - this is mapped to a switch by default
index>5 - optional extra channels, which some controllers use

We could use channel 6 for "config", which means it will be attached to a switch/ button,
and a number of flips can be used to change mode and save the new mode to eeprom.

Or something.

index=6,7 etc - these are optional


ZERO/OFFSET
-----------

All channels should read the controller position when first started. When the signal
is first detected, the initial steering will be "dead centre". The steering gimble will usually
have a spring which pulls it to centre.

However, the initial throttle position will always be at zero (for quadcopter) or "full reverse" for 
a tank-steering.  The Turnigy Evolution tx forces the operator to move the throttle to zero before
it starts up (Which is the safe position for a quadcopter).

* Let's NOT try to be clever with the throttle. At power-on, it may be full reverse. Ignore that;
don't drive the robot in full reverse.

* Wait for throttle to reach (pre-defined) zero position before activiating drive.

